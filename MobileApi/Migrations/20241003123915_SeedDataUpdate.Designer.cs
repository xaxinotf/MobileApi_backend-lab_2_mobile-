// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileApi.Models;

#nullable disable

namespace MobileApi.Migrations
{
    [DbContext(typeof(MobileAppDbContext))]
    [Migration("20241003123915_SeedDataUpdate")]
    partial class SeedDataUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MobileApi.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Distance = 0.0,
                            Name = "Київ",
                            Population = 2884000
                        },
                        new
                        {
                            Id = 2,
                            Distance = 540.70000000000005,
                            Name = "Львів",
                            Population = 717273
                        },
                        new
                        {
                            Id = 3,
                            Distance = 475.39999999999998,
                            Name = "Одеса",
                            Population = 1010537
                        },
                        new
                        {
                            Id = 4,
                            Distance = 489.0,
                            Name = "Харків",
                            Population = 1421125
                        },
                        new
                        {
                            Id = 5,
                            Distance = 650.5,
                            Name = "Дніпро",
                            Population = 1002000
                        },
                        new
                        {
                            Id = 6,
                            Distance = 550.20000000000005,
                            Name = "Запоріжжя",
                            Population = 729000
                        },
                        new
                        {
                            Id = 7,
                            Distance = 265.30000000000001,
                            Name = "Вінниця",
                            Population = 372700
                        },
                        new
                        {
                            Id = 8,
                            Distance = 140.59999999999999,
                            Name = "Чернігів",
                            Population = 285234
                        },
                        new
                        {
                            Id = 9,
                            Distance = 350.80000000000001,
                            Name = "Полтава",
                            Population = 300400
                        },
                        new
                        {
                            Id = 10,
                            Distance = 620.5,
                            Name = "Івано-Франківськ",
                            Population = 237700
                        });
                });

            modelBuilder.Entity("MobileApi.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "oleksii.symonenko@gmail.com",
                            Name = "Oleksii Symonenko"
                        },
                        new
                        {
                            Id = 2,
                            Email = "kateryna.ivanova@ukr.net",
                            Name = "Kateryna Ivanova"
                        },
                        new
                        {
                            Id = 3,
                            Email = "dmytro.lysenko@gmail.com",
                            Name = "Dmytro Lysenko"
                        },
                        new
                        {
                            Id = 4,
                            Email = "olena.hladka@gmail.com",
                            Name = "Olena Hladka"
                        },
                        new
                        {
                            Id = 5,
                            Email = "pavlo.shevchuk@ukr.net",
                            Name = "Pavlo Shevchuk"
                        },
                        new
                        {
                            Id = 6,
                            Email = "anatolii.troian@gmail.com",
                            Name = "Anatolii Troian"
                        },
                        new
                        {
                            Id = 7,
                            Email = "yana.dubovyk@gmail.com",
                            Name = "Yana Dubovyk"
                        },
                        new
                        {
                            Id = 8,
                            Email = "serhii.naumenko@ukr.net",
                            Name = "Serhii Naumenko"
                        },
                        new
                        {
                            Id = 9,
                            Email = "oksana.mykhailenko@gmail.com",
                            Name = "Oksana Mykhailenko"
                        },
                        new
                        {
                            Id = 10,
                            Email = "andrii.voronenko@ukr.net",
                            Name = "Andrii Voronenko"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
